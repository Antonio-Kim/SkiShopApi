name: Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef

      - name: Add Migrations
        run: |
          dotnet ef migrations add Deployment --project ./API/API.csproj
          sleep 20

      - name: Apply Migrations
        run: dotnet ef database update --project ./API/API.csproj

      - name: List contents of publish directory
        run: ls -R .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: .

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: List contents of publish directory
        run: ls -R .
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Newman
        run: npm install -g newman
      - name: Run Integration Test
        run: |
          dotnet ./API/bin/Debug/net8.0/API.dll & API_PID=$!
          echo "Waiting for API to start..."
          sleep 10
          echo "testing api"
          curl http://localhost:5000/products/1
          echo "killing API process"
          kill $API_PID
          wait $API_PID 2>/dev/null || true

  docker:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: '{{defaultContext}}:API'
          push: true
          tags: antoni0kim/skishop:latest

  deploy:
    name: Deploy app
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
