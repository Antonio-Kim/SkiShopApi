name: Backend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release

      - name: Install EF Core Tools
        run: dotnet tool install --global dotnet-ef

      - name: Add Migrations
        run: |
          dotnet ef migrations add Initial --project ./API/API.csproj
          sleep 20

      - name: Apply Migrations
        run: dotnet ef database update --project ./API/API.csproj

      - name: List contents of publish directory
        run: ls -R .

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: .

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: List contents of publish directory
        run: ls -R .
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Newman
        run: npm install -g newman
      - name: Run Integration Test
        run: |
          dotnet ./API.dll & API_PID=$!
          echo "Waiting for API to start..."
          sleep 10
          echo "testing api"
          curl http://localhost:5000/products/1
          echo "killing API process"
          kill $API_PID
          wait $API_PID 2>/dev/null || true

  deploy:
    runs-on: ubuntu-latest
    needs: integration-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_002CA322DBA3406CA98836F6B9EF20DE }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7B73F785E84946A5BA77BED7CBAE7F50 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_283B1854E2B14767A38D7BF7DA640A28 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'skishop'
          slot-name: 'Production'
          package: .
